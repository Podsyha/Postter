// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Postter.Infrastructure.Context;

#nullable disable

namespace Postter.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221003144000_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Postter.Infrastructure.DAO.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("HashPassword")
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("Salt")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Person");

                    b.HasData(
                        new
                        {
                            Id = new Guid("255f0583-5562-459b-aec9-0cd710c9548c"),
                            DateAdded = new DateTime(2022, 10, 3, 14, 40, 0, 624, DateTimeKind.Utc).AddTicks(2112),
                            Email = "admin@gmail.com",
                            HashPassword = "F3C16288193DE4109101B275139EB26A",
                            RoleId = 1,
                            Salt = "&jJG9pdzFbKg0DEv1oeg"
                        },
                        new
                        {
                            Id = new Guid("a2fbf9de-7e80-426a-bbf0-21f470b16a36"),
                            DateAdded = new DateTime(2022, 10, 3, 14, 40, 0, 624, DateTimeKind.Utc).AddTicks(2130),
                            Email = "user@gmail.com",
                            HashPassword = "820917053DE2554AFE1269F8B9C619F1",
                            RoleId = 2,
                            Salt = "O6A6YX9^v^b0&izbX3Uu"
                        },
                        new
                        {
                            Id = new Guid("45f51610-69e2-4e1f-a2c7-914fbee0bb66"),
                            DateAdded = new DateTime(2022, 10, 3, 14, 40, 0, 624, DateTimeKind.Utc).AddTicks(2132),
                            Email = "moder@gmail.com",
                            HashPassword = "EDA47FA3EECA76390DD35EB4CB003E9C",
                            RoleId = 3,
                            Salt = "pp#OEW%BOK8n_T2aVXTC"
                        });
                });

            modelBuilder.Entity("Postter.Infrastructure.DAO.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Moder"
                        });
                });

            modelBuilder.Entity("Postter.Infrastructure.DAO.Person", b =>
                {
                    b.HasOne("Postter.Infrastructure.DAO.Role", "Role")
                        .WithMany("Persons")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Postter.Infrastructure.DAO.Role", b =>
                {
                    b.Navigation("Persons");
                });
#pragma warning restore 612, 618
        }
    }
}
